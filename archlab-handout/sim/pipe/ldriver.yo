                            | #######################################################################
                            | # Test for copying block of size 63;
                            | #######################################################################
0x000:                      | 	.pos 0
0x000: 30f43807000000000000 | main:	irmovq Stack, %rsp  	# Set up stack pointer
                            | 
                            | 	# Set up arguments for copy function and then invoke it
0x00a: 30f23f00000000000000 | 	irmovq $63, %rdx		# src and dst have 63 elements
0x014: 30f6b804000000000000 | 	irmovq dest, %rsi	# dst array
0x01e: 30f7b002000000000000 | 	irmovq src, %rdi	# src array
0x028: 803200000000000000   | 	call ncopy		 
0x031: 00                   | 	halt			# should halt with num nonzeros in %rax
0x032:                      | StartFun:
                            | #/* $begin ncopy-ys */
                            | ##################################################################
                            | # ncopy.ys - Copy a src block of len words to dst.
                            | # Return the number of positive words (>0) contained in src.
                            | #
                            | # Include your name and ID here.
                            | #
                            | # Describe how and why you modified the baseline code.
                            | #
                            | ##################################################################
                            | # Do not modify this portion
                            | # Function prologue.
                            | # %rdi = src, %rsi = dst, %rdx = len
0x032:                      | ncopy:
                            | 
                            | ##################################################################
                            | # You can modify this portion	
                            | 	# Loop header
0x032: 6222                 | 	andq %rdx,%rdx		# len <= 0?
0x034: 704701000000000000   | 	jmp test
0x03d:                      | Loop:
0x03d: 50a70000000000000000 | 	mrmovq (%rdi),%r10
0x047: 50b70800000000000000 | 	mrmovq 8(%rdi),%r11
0x051: 40a60000000000000000 | 	rmmovq %r10,(%rsi)
0x05b: 40b60800000000000000 | 	rmmovq %r11,8(%rsi)
0x065: 62aa                 | 	andq %r10,%r10
0x067: 717a00000000000000   | 	jle Loop1
0x070: c0f00100000000000000 | 	iaddq $1,%rax
0x07a:                      | Loop1:
0x07a: 62bb                 | 	andq %r11,%r11
0x07c: 718f00000000000000   | 	jle Loop2
0x085: c0f00100000000000000 | 	iaddq $1,%rax
0x08f:                      | Loop2:
0x08f: 50a71000000000000000 | 	mrmovq 16(%rdi),%r10
0x099: 50b71800000000000000 | 	mrmovq 24(%rdi),%r11
0x0a3: 40a61000000000000000 | 	rmmovq %r10,16(%rsi)
0x0ad: 40b61800000000000000 | 	rmmovq %r11,24(%rsi)
0x0b7: 62aa                 | 	andq %r10,%r10
0x0b9: 71cc00000000000000   | 	jle Loop3
0x0c2: c0f00100000000000000 | 	iaddq $1,%rax
0x0cc:                      | Loop3:
0x0cc: 62bb                 | 	andq %r11,%r11
0x0ce: 71e100000000000000   | 	jle Loop4
0x0d7: c0f00100000000000000 | 	iaddq $1,%rax
0x0e1:                      | Loop4:
0x0e1: 50a72000000000000000 | 	mrmovq 32(%rdi),%r10
0x0eb: 50b72800000000000000 | 	mrmovq 40(%rdi),%r11
0x0f5: 40a62000000000000000 | 	rmmovq %r10,32(%rsi)
0x0ff: 40b62800000000000000 | 	rmmovq %r11,40(%rsi)
0x109: 62aa                 | 	andq %r10,%r10
0x10b: 711e01000000000000   | 	jle Loop5
0x114: c0f00100000000000000 | 	iaddq $1,%rax
0x11e:                      | Loop5:
0x11e: c0f73000000000000000 | 	iaddq $48,%rdi
0x128: c0f63000000000000000 | 	iaddq $48,%rsi
0x132: 62bb                 | 	andq %r11,%r11
0x134: 714701000000000000   | 	jle test
0x13d: c0f00100000000000000 | 	iaddq $1,%rax	
0x147:                      | test:
0x147: c0f2faffffffffffffff | 	iaddq $-6, %rdx
0x151: 753d00000000000000   | 	jge Loop
0x15a: c0f20600000000000000 | 	iaddq $6, %rdx
0x164: 70fc01000000000000   | 	jmp test2
0x16d:                      | L:
0x16d: 50a70000000000000000 | 	mrmovq (%rdi),%r10
0x177: 50b70800000000000000 | 	mrmovq 8(%rdi),%r11
0x181: 40a60000000000000000 | 	rmmovq %r10,(%rsi)
0x18b: 40b60800000000000000 | 	rmmovq %r11,8(%rsi)
0x195: 62aa                 | 	andq %r10,%r10
0x197: 71aa01000000000000   | 	jle L1
0x1a0: c0f00100000000000000 | 	iaddq $1,%rax
0x1aa:                      | L1:
0x1aa: 62bb                 | 	andq %r11,%r11
0x1ac: 71bf01000000000000   | 	jle L2
0x1b5: c0f00100000000000000 | 	iaddq $1,%rax
0x1bf:                      | L2:
0x1bf: 50a71000000000000000 | 	mrmovq 16(%rdi),%r10
0x1c9: c0f71800000000000000 | 	iaddq $24,%rdi
0x1d3: 40a61000000000000000 | 	rmmovq %r10,16(%rsi)
0x1dd: c0f61800000000000000 | 	iaddq $24,%rsi
0x1e7: 62aa                 | 	andq %r10,%r10
0x1e9: 71fc01000000000000   | 	jle test2
0x1f2: c0f00100000000000000 | 	iaddq $1,%rax
0x1fc:                      | test2:
0x1fc: c0f2fdffffffffffffff | 	iaddq $-3, %rdx			# 先减，判断够不够3个
0x206: 756d01000000000000   | 	jge L
0x20f: c0f20200000000000000 | 	iaddq $2, %rdx			# -1则不剩了，直接Done,0 剩一个, 1剩2个
0x219: 738602000000000000   |   je R0
0x222: 72af02000000000000   |   jl Done
0x22b: 50a70000000000000000 | 	mrmovq (%rdi),%r10
0x235: 40a60000000000000000 | 	rmmovq %r10,(%rsi)
0x23f: 62aa                 | 	andq %r10,%r10
0x241: 715402000000000000   | 	jle R2
0x24a: c0f00100000000000000 | 	iaddq $1,%rax
0x254:                      | R2:
0x254: 50a70800000000000000 | 	mrmovq 8(%rdi),%r10
0x25e: 40a60800000000000000 | 	rmmovq %r10,8(%rsi)
0x268: 62aa                 | 	andq %r10,%r10
0x26a: 71af02000000000000   | 	jle Done
0x273: c0f00100000000000000 | 	iaddq $1,%rax
0x27d: 70af02000000000000   | 	jmp Done
0x286:                      | R0:
0x286: 50a70000000000000000 | 	mrmovq (%rdi),%r10
0x290: 40a60000000000000000 | 	rmmovq %r10,(%rsi)
0x29a: 62aa                 | 	andq %r10,%r10
0x29c: 71af02000000000000   | 	jle Done
0x2a5: c0f00100000000000000 | 	iaddq $1,%rax
                            | ##################################################################
                            | # Do not modify the following section of code
                            | # Function epilogue.
0x2af:                      | Done:
0x2af: 90                   | 	ret
                            | ##################################################################
                            | # Keep the following label at the end of your function
0x2b0:                      | End:
                            | #/* $end ncopy-ys */
0x2b0:                      | EndFun:
                            | 
                            | ###############################
                            | # Source and destination blocks 
                            | ###############################
0x2b0:                      | 	.align 8
0x2b0:                      | src:
0x2b0: ffffffffffffffff     | 	.quad -1
0x2b8: 0200000000000000     | 	.quad 2
0x2c0: fdffffffffffffff     | 	.quad -3
0x2c8: 0400000000000000     | 	.quad 4
0x2d0: 0500000000000000     | 	.quad 5
0x2d8: faffffffffffffff     | 	.quad -6
0x2e0: 0700000000000000     | 	.quad 7
0x2e8: 0800000000000000     | 	.quad 8
0x2f0: f7ffffffffffffff     | 	.quad -9
0x2f8: 0a00000000000000     | 	.quad 10
0x300: f5ffffffffffffff     | 	.quad -11
0x308: f4ffffffffffffff     | 	.quad -12
0x310: f3ffffffffffffff     | 	.quad -13
0x318: f2ffffffffffffff     | 	.quad -14
0x320: 0f00000000000000     | 	.quad 15
0x328: 1000000000000000     | 	.quad 16
0x330: 1100000000000000     | 	.quad 17
0x338: eeffffffffffffff     | 	.quad -18
0x340: edffffffffffffff     | 	.quad -19
0x348: 1400000000000000     | 	.quad 20
0x350: ebffffffffffffff     | 	.quad -21
0x358: 1600000000000000     | 	.quad 22
0x360: 1700000000000000     | 	.quad 23
0x368: 1800000000000000     | 	.quad 24
0x370: e7ffffffffffffff     | 	.quad -25
0x378: 1a00000000000000     | 	.quad 26
0x380: e5ffffffffffffff     | 	.quad -27
0x388: 1c00000000000000     | 	.quad 28
0x390: 1d00000000000000     | 	.quad 29
0x398: e2ffffffffffffff     | 	.quad -30
0x3a0: e1ffffffffffffff     | 	.quad -31
0x3a8: 2000000000000000     | 	.quad 32
0x3b0: dfffffffffffffff     | 	.quad -33
0x3b8: deffffffffffffff     | 	.quad -34
0x3c0: 2300000000000000     | 	.quad 35
0x3c8: 2400000000000000     | 	.quad 36
0x3d0: 2500000000000000     | 	.quad 37
0x3d8: daffffffffffffff     | 	.quad -38
0x3e0: d9ffffffffffffff     | 	.quad -39
0x3e8: d8ffffffffffffff     | 	.quad -40
0x3f0: 2900000000000000     | 	.quad 41
0x3f8: d6ffffffffffffff     | 	.quad -42
0x400: d5ffffffffffffff     | 	.quad -43
0x408: d4ffffffffffffff     | 	.quad -44
0x410: 2d00000000000000     | 	.quad 45
0x418: d2ffffffffffffff     | 	.quad -46
0x420: d1ffffffffffffff     | 	.quad -47
0x428: 3000000000000000     | 	.quad 48
0x430: cfffffffffffffff     | 	.quad -49
0x438: ceffffffffffffff     | 	.quad -50
0x440: 3300000000000000     | 	.quad 51
0x448: 3400000000000000     | 	.quad 52
0x450: cbffffffffffffff     | 	.quad -53
0x458: 3600000000000000     | 	.quad 54
0x460: 3700000000000000     | 	.quad 55
0x468: 3800000000000000     | 	.quad 56
0x470: c7ffffffffffffff     | 	.quad -57
0x478: 3a00000000000000     | 	.quad 58
0x480: 3b00000000000000     | 	.quad 59
0x488: c4ffffffffffffff     | 	.quad -60
0x490: 3d00000000000000     | 	.quad 61
0x498: c2ffffffffffffff     | 	.quad -62
0x4a0: c1ffffffffffffff     | 	.quad -63
0x4a8: fadebc0000000000     | 	.quad 0xbcdefa # This shouldn't get moved
                            | 
0x4b0:                      | 	.align 16
0x4b0:                      | Predest:
0x4b0: fadebc0000000000     | 	.quad 0xbcdefa
0x4b8:                      | dest:
0x4b8: abefcd0000000000     | 	.quad 0xcdefab
0x4c0: abefcd0000000000     | 	.quad 0xcdefab
0x4c8: abefcd0000000000     | 	.quad 0xcdefab
0x4d0: abefcd0000000000     | 	.quad 0xcdefab
0x4d8: abefcd0000000000     | 	.quad 0xcdefab
0x4e0: abefcd0000000000     | 	.quad 0xcdefab
0x4e8: abefcd0000000000     | 	.quad 0xcdefab
0x4f0: abefcd0000000000     | 	.quad 0xcdefab
0x4f8: abefcd0000000000     | 	.quad 0xcdefab
0x500: abefcd0000000000     | 	.quad 0xcdefab
0x508: abefcd0000000000     | 	.quad 0xcdefab
0x510: abefcd0000000000     | 	.quad 0xcdefab
0x518: abefcd0000000000     | 	.quad 0xcdefab
0x520: abefcd0000000000     | 	.quad 0xcdefab
0x528: abefcd0000000000     | 	.quad 0xcdefab
0x530: abefcd0000000000     | 	.quad 0xcdefab
0x538: abefcd0000000000     | 	.quad 0xcdefab
0x540: abefcd0000000000     | 	.quad 0xcdefab
0x548: abefcd0000000000     | 	.quad 0xcdefab
0x550: abefcd0000000000     | 	.quad 0xcdefab
0x558: abefcd0000000000     | 	.quad 0xcdefab
0x560: abefcd0000000000     | 	.quad 0xcdefab
0x568: abefcd0000000000     | 	.quad 0xcdefab
0x570: abefcd0000000000     | 	.quad 0xcdefab
0x578: abefcd0000000000     | 	.quad 0xcdefab
0x580: abefcd0000000000     | 	.quad 0xcdefab
0x588: abefcd0000000000     | 	.quad 0xcdefab
0x590: abefcd0000000000     | 	.quad 0xcdefab
0x598: abefcd0000000000     | 	.quad 0xcdefab
0x5a0: abefcd0000000000     | 	.quad 0xcdefab
0x5a8: abefcd0000000000     | 	.quad 0xcdefab
0x5b0: abefcd0000000000     | 	.quad 0xcdefab
0x5b8: abefcd0000000000     | 	.quad 0xcdefab
0x5c0: abefcd0000000000     | 	.quad 0xcdefab
0x5c8: abefcd0000000000     | 	.quad 0xcdefab
0x5d0: abefcd0000000000     | 	.quad 0xcdefab
0x5d8: abefcd0000000000     | 	.quad 0xcdefab
0x5e0: abefcd0000000000     | 	.quad 0xcdefab
0x5e8: abefcd0000000000     | 	.quad 0xcdefab
0x5f0: abefcd0000000000     | 	.quad 0xcdefab
0x5f8: abefcd0000000000     | 	.quad 0xcdefab
0x600: abefcd0000000000     | 	.quad 0xcdefab
0x608: abefcd0000000000     | 	.quad 0xcdefab
0x610: abefcd0000000000     | 	.quad 0xcdefab
0x618: abefcd0000000000     | 	.quad 0xcdefab
0x620: abefcd0000000000     | 	.quad 0xcdefab
0x628: abefcd0000000000     | 	.quad 0xcdefab
0x630: abefcd0000000000     | 	.quad 0xcdefab
0x638: abefcd0000000000     | 	.quad 0xcdefab
0x640: abefcd0000000000     | 	.quad 0xcdefab
0x648: abefcd0000000000     | 	.quad 0xcdefab
0x650: abefcd0000000000     | 	.quad 0xcdefab
0x658: abefcd0000000000     | 	.quad 0xcdefab
0x660: abefcd0000000000     | 	.quad 0xcdefab
0x668: abefcd0000000000     | 	.quad 0xcdefab
0x670: abefcd0000000000     | 	.quad 0xcdefab
0x678: abefcd0000000000     | 	.quad 0xcdefab
0x680: abefcd0000000000     | 	.quad 0xcdefab
0x688: abefcd0000000000     | 	.quad 0xcdefab
0x690: abefcd0000000000     | 	.quad 0xcdefab
0x698: abefcd0000000000     | 	.quad 0xcdefab
0x6a0: abefcd0000000000     | 	.quad 0xcdefab
0x6a8: abefcd0000000000     | 	.quad 0xcdefab
0x6b0:                      | Postdest:
0x6b0: bcfade0000000000     | 	.quad 0xdefabc
                            | 
0x6b8:                      | .align 8
                            | # Run time stack
0x6b8: 0000000000000000     | 	.quad 0
0x6c0: 0000000000000000     | 	.quad 0
0x6c8: 0000000000000000     | 	.quad 0
0x6d0: 0000000000000000     | 	.quad 0
0x6d8: 0000000000000000     | 	.quad 0
0x6e0: 0000000000000000     | 	.quad 0
0x6e8: 0000000000000000     | 	.quad 0
0x6f0: 0000000000000000     | 	.quad 0
0x6f8: 0000000000000000     | 	.quad 0
0x700: 0000000000000000     | 	.quad 0
0x708: 0000000000000000     | 	.quad 0
0x710: 0000000000000000     | 	.quad 0
0x718: 0000000000000000     | 	.quad 0
0x720: 0000000000000000     | 	.quad 0
0x728: 0000000000000000     | 	.quad 0
0x730: 0000000000000000     | 	.quad 0
                            | 
0x738:                      | Stack:

                            | # Excution begins at address 0
0x000:                      | 	.pos 0
0x000: 30f40002000000000000 | 	irmovq stack, %rsp	# Set up stack pointer
0x00a: 804800000000000000   | 	call main	# Excute main program
0x013: 00                   | 	halt	# Terminate program
                            | 
                            | # Sample linked list
0x018:                      | .align 8
0x018:                      | ele1:
0x018: 0a00000000000000     | 	.quad 0x00a
0x020: 2800000000000000     | 	.quad ele2
0x028:                      | ele2:
0x028: b000000000000000     | 	.quad 0x0b0
0x030: 3800000000000000     | 	.quad ele3
0x038:                      | ele3:
0x038: 000c000000000000     | 	.quad 0xc00
0x040: 0000000000000000     | 	.quad 0
                            | 
                            | # main function
0x048:                      | main:
0x048: 30f71800000000000000 | 	irmovq ele1, %rdi
0x052: 805c00000000000000   | 	call sum_list	# sum_list(ele1)
0x05b: 90                   | 	ret
                            | 
                            | # sum_list function
0x05c:                      | sum_list:
0x05c: 30f00000000000000000 | 	irmovq $0, %rax	# val = 0
0x066:                      | loop:
0x066: 6277                 | 	andq %rdi, %rdi # 判断rdi地址是否有效
0x068: 739000000000000000   |   je out
0x071: 50670000000000000000 |   mrmovq 0(%rdi), %rsi # rsi = *(rdi)
0x07b: 6060                 |   addq %rsi, %rax # rax += rsi
0x07d: 50770800000000000000 |   mrmovq 8(%rdi), %rdi #  rdi = *(rdi + 8)
0x087: 706600000000000000   |   jmp loop
0x090:                      | out:
0x090: 90                   | 	ret
                            | 	
                            | # Stack starts here and grows to lower addresses
0x200:                      | 	.pos 0x200
0x200:                      | stack:

# Excution begins at address 0
	.pos 0
	irmovq stack, %rsp	# Set up stack pointer
	call main	# Excute main program
	halt	# Terminate program

# Sample linked list
.align 8
ele1:
	.quad 0x00a
	.quad ele2
ele2:
	.quad 0x0b0
	.quad ele3
ele3:
	.quad 0xc00
	.quad 0

# main function
main:
	irmovq ele1, %rdi
	call rsum_list	# rsum_list(ele1)
	ret

# rsum_list function
rsum_list:
	pushq %rbx
	irmovq $0, %rax 
	andq %rdi, %rdi
	jne L1	# 如果节点为nil，直接返回0
	irmovq $0, %rax
	jmp L2
L1:
	mrmovq (%rdi), %rbx
	mrmovq 8(%rdi), %rdi	# rdi = rdi -> next
	call rsum_list
	addq %rbx, %rax	# node.val + rsum_list(node.next)
L2:
	popq	%rbx
	ret
	
# Stack starts here and grows to lower addresses
	.pos 0x200
stack:

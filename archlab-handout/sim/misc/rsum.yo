                            | # Excution begins at address 0
0x000:                      | 	.pos 0
0x000: 30f40002000000000000 | 	irmovq stack, %rsp	# Set up stack pointer
0x00a: 804800000000000000   | 	call main	# Excute main program
0x013: 00                   | 	halt	# Terminate program
                            | 
                            | # Sample linked list
0x018:                      | .align 8
0x018:                      | ele1:
0x018: 0a00000000000000     | 	.quad 0x00a
0x020: 2800000000000000     | 	.quad ele2
0x028:                      | ele2:
0x028: b000000000000000     | 	.quad 0x0b0
0x030: 3800000000000000     | 	.quad ele3
0x038:                      | ele3:
0x038: 000c000000000000     | 	.quad 0xc00
0x040: 0000000000000000     | 	.quad 0
                            | 
                            | # main function
0x048:                      | main:
0x048: 30f71800000000000000 | 	irmovq ele1, %rdi
0x052: 805c00000000000000   | 	call rsum_list	# rsum_list(ele1)
0x05b: 90                   | 	ret
                            | 
                            | # rsum_list function
0x05c:                      | rsum_list:
0x05c: a03f                 | 	pushq %rbx
0x05e: 30f00000000000000000 | 	irmovq $0, %rax 
0x068: 6277                 | 	andq %rdi, %rdi
0x06a: 748600000000000000   | 	jne L1	# 如果节点为nil，直接返回0
0x073: 30f00000000000000000 | 	irmovq $0, %rax
0x07d: 70a500000000000000   | 	jmp L2
0x086:                      | L1:
0x086: 50370000000000000000 | 	mrmovq (%rdi), %rbx
0x090: 50770800000000000000 | 	mrmovq 8(%rdi), %rdi	# rdi = rdi -> next
0x09a: 805c00000000000000   | 	call rsum_list
0x0a3: 6030                 | 	addq %rbx, %rax	# node.val + rsum_list(node.next)
0x0a5:                      | L2:
0x0a5: b03f                 | 	popq	%rbx
0x0a7: 90                   | 	ret
                            | 	
                            | # Stack starts here and grows to lower addresses
0x200:                      | 	.pos 0x200
0x200:                      | stack:

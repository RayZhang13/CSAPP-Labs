# Excution begins at address 0
	.pos 0
	irmovq stack, %rsp	# Set up stack pointer
	call main	# Excute main program
	halt	# Terminate program

.align 8
# Source block
src:
	.quad 0x00a
	.quad 0x0b0
	.quad 0xc00
# Destination block
dest:
	.quad 0x111
	.quad 0x222
	.quad 0x333

# main function
main:
	irmovq src, %rdi
	irmovq dest, %rsi
	irmovq $3, %rdx
	call copy_block # copy_block(src, dest, 3)
	ret

# copy_block function
copy_block:
	pushq %r8
	pushq %r9
	pushq %rcx
	irmovq $8, %r8
	irmovq $1, %r9
	irmovq $0, %rax
L1:
	andq %rdx, %rdx
	je L2
	mrmovq 0(%rdi), %rcx
	addq %r8, %rdi
	rmmovq %rcx, (%rsi)
	addq %r8, %rsi
	xorq %rcx, %rax
	subq %r9, %rdx
	jmp L1
L2:
	popq %r8
	popq %r9
	popq %rcx
	ret
	
# Stack starts here and grows to lower addresses
	.pos 0x200
stack:
